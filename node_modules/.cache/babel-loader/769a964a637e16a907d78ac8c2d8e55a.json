{"ast":null,"code":"var _jsxFileName = \"/home/leo/Documentos/reactjs/ignite/dtmoney/src/components/NewTransactionModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Modal from 'react-modal';\nimport incomeImg from '../../assets/income.svg';\nimport outcomeImg from '../../assets/outcome.svg';\nimport { Container, RadioBox, TransactionTypeContainer } from './styles';\nimport closeImg from '../../assets/close.svg';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewTransactionModal(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onRequestClose\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [value, setValue] = useState(0);\n  const [category, setCategory] = useState('');\n  const [type, setType] = useState('deposit');\n\n  function handleCreateNewTransaction(event) {\n    event.preventDefault();\n    console.log({\n      title,\n      value,\n      category,\n      type\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    overlayClassName: \"react-modal-overlay\",\n    className: \"react-modal-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onRequestClose,\n      className: \"react-modal-close\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: closeImg,\n        alt: \"Fechar modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      onClick: handleCreateNewTransaction,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastrar transa\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"T\\xEDtulo\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Valor\",\n        value: value,\n        onChange: event => setValue(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionTypeContainer, {\n        children: [/*#__PURE__*/_jsxDEV(RadioBox, {\n          type: \"button\",\n          onClick: () => {\n            setType('deposit');\n          },\n          isActive: type === 'deposit',\n          activeColor: \"green\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: incomeImg,\n            alt: \"Entrada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Entrada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioBox, {\n          type: \"button\",\n          onClick: () => {\n            setType('withdraw');\n          },\n          isActive: type === 'withdraw',\n          activeColor: \"red\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: outcomeImg,\n            alt: \"Sa\\xEDda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Sa\\xEDda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Categoria\",\n        value: category,\n        onChange: event => setCategory(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewTransactionModal, \"q3m2AJCt4i7IpnkQXWNFN5ygflA=\");\n\n_c = NewTransactionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTransactionModal\");","map":{"version":3,"sources":["/home/leo/Documentos/reactjs/ignite/dtmoney/src/components/NewTransactionModal/index.tsx"],"names":["Modal","incomeImg","outcomeImg","Container","RadioBox","TransactionTypeContainer","closeImg","useState","NewTransactionModal","isOpen","onRequestClose","title","setTitle","value","setValue","category","setCategory","type","setType","handleCreateNewTransaction","event","preventDefault","console","log","target","Number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,wBAA9B,QAA8D,UAA9D;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAoBC,QAApB,QAAoC,OAApC;;AAQA,OAAO,SAASC,mBAAT,OAAiF;AAAA;;AAAA,MAApD;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAoD;AACtF,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,SAAD,CAAhC;;AAEA,WAASY,0BAAT,CAAqCC,KAArC,EAAuD;AACrDA,IAAAA,KAAK,CAACC,cAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AACVZ,MAAAA,KADU;AAEVE,MAAAA,KAFU;AAGVE,MAAAA,QAHU;AAIVE,MAAAA;AAJU,KAAZ;AAMD;;AAED,sBACE,QAAC,KAAD;AACE,IAAA,MAAM,EAAER,MADV;AAEE,IAAA,cAAc,EAAEC,cAFlB;AAGE,IAAA,gBAAgB,EAAC,qBAHnB;AAIE,IAAA,SAAS,EAAC,qBAJZ;AAAA,4BAME;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAEA,cAFX;AAGE,MAAA,SAAS,EAAC,mBAHZ;AAAA,6BAKE;AAAK,QAAA,GAAG,EAAEJ,QAAV;AAAoB,QAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YANF,eAcE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEa,0BAApB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,WAAW,EAAC,WADd;AAEE,QAAA,KAAK,EAAER,KAFT;AAGE,QAAA,QAAQ,EAAES,KAAK,IAAIR,QAAQ,CAACQ,KAAK,CAACI,MAAN,CAAaX,KAAd;AAH7B;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,OAFd;AAGE,QAAA,KAAK,EAAEA,KAHT;AAIE,QAAA,QAAQ,EAAEO,KAAK,IAAIN,QAAQ,CAACW,MAAM,CAACL,KAAK,CAACI,MAAN,CAAaX,KAAd,CAAP;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAPF,eAcE,QAAC,wBAAD;AAAA,gCACE,QAAC,QAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAE,MAAM;AAACK,YAAAA,OAAO,CAAC,SAAD,CAAP;AAAmB,WAFrC;AAGE,UAAA,QAAQ,EAAED,IAAI,KAAK,SAHrB;AAIE,UAAA,WAAW,EAAC,OAJd;AAAA,kCAME;AAAK,YAAA,GAAG,EAAEhB,SAAV;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,QAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAE,MAAM;AAACiB,YAAAA,OAAO,CAAC,UAAD,CAAP;AAAoB,WAFtC;AAGE,UAAA,QAAQ,EAAED,IAAI,KAAK,UAHrB;AAIE,UAAA,WAAW,EAAC,KAJd;AAAA,kCAME;AAAK,YAAA,GAAG,EAAEf,UAAV;AAAsB,YAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAmCE;AACE,QAAA,WAAW,EAAC,WADd;AAEE,QAAA,KAAK,EAAEa,QAFT;AAGE,QAAA,QAAQ,EAAEK,KAAK,IAAIJ,WAAW,CAACI,KAAK,CAACI,MAAN,CAAaX,KAAd;AAHhC;AAAA;AAAA;AAAA;AAAA,cAnCF,eAwCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD;;GA9EeL,mB;;KAAAA,mB","sourcesContent":["import Modal from 'react-modal'\nimport incomeImg from '../../assets/income.svg'\nimport outcomeImg from '../../assets/outcome.svg'\nimport { Container, RadioBox, TransactionTypeContainer } from './styles'\nimport closeImg from '../../assets/close.svg'\nimport { FormEvent, useState } from 'react'\n\ninterface NewTransactionModalProps {\n  isOpen: boolean;\n  onRequestClose: () => void;\n} \n\n\nexport function NewTransactionModal({isOpen, onRequestClose}: NewTransactionModalProps) {\n  const [title, setTitle] = useState('');\n  const [value, setValue] = useState(0);\n  const [category, setCategory] = useState('');\n  const [type, setType] = useState('deposit');\n\n  function handleCreateNewTransaction (event: FormEvent) {\n    event.preventDefault()\n  \n    console.log({\n      title,\n      value,\n      category,\n      type,\n    })\n  }\n  \n  return (\n    <Modal \n      isOpen={isOpen} \n      onRequestClose={onRequestClose}\n      overlayClassName='react-modal-overlay'\n      className='react-modal-content'\n    >\n      <button \n        type='button' \n        onClick={onRequestClose} \n        className='react-modal-close'\n      >\n        <img src={closeImg} alt=\"Fechar modal\" />\n      </button>\n\n      <Container onClick={handleCreateNewTransaction}>\n        <h2>Cadastrar transação</h2>\n        <input\n          placeholder='Título'\n          value={title}\n          onChange={event => setTitle(event.target.value)}\n        />\n        <input\n          type=\"number\"\n          placeholder='Valor'\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n        />\n\n        <TransactionTypeContainer>\n          <RadioBox\n            type='button'\n            onClick={() => {setType('deposit')}}\n            isActive={type === 'deposit'}\n            activeColor=\"green\"\n          >\n            <img src={incomeImg} alt=\"Entrada\" />\n            <span>Entrada</span>\n          </RadioBox>\n\n          <RadioBox\n            type='button'\n            onClick={() => {setType('withdraw')}}\n            isActive={type === 'withdraw'}\n            activeColor=\"red\"\n          >\n            <img src={outcomeImg} alt=\"Saída\" />\n            <span>Saída</span>\n          </RadioBox>\n        </TransactionTypeContainer>\n        <input\n          placeholder='Categoria'\n          value={category}\n          onChange={event => setCategory(event.target.value)}\n        />\n        <button type='submit'> \n          Cadastrar\n        </button>\n      </Container>\n    </Modal>\n  )\n}"]},"metadata":{},"sourceType":"module"}